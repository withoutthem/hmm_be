# =====================================================================
# Husky pre-commit hook (BE 전용 레포)
# - BE: Docker(Compose) 컨테이너에서 Maven 정적분석(Checkstyle/PMD)
# =====================================================================

set -euo pipefail

# --------------------------- Helpers ---------------------------------
log()   { printf "\033[36m%s\033[0m\n" "$*"; }
ok()    { printf "✅ \033[32m%s\033[0m\n" "$*"; }
warn()  { printf "⚠️  \033[33m%s\033[0m\n" "$*"; }
fail()  { printf "❌ \033[31m%s\033[0m\n" "$*" >&2; exit 1; }
error() { printf "❌ \033[31m%s\033[0m\n" "$*" >&2; }
divider(){ printf "\n\033[35m──────────────────────────────────────────────\033[0m\n\n"; }

# (수정됨) 항상 프로젝트 루트(HMM)에서 실행되도록 보장
REPO_ROOT=$(git rev-parse --show-toplevel)
cd "$REPO_ROOT"

divider
log "🚀 Husky pre-commit Hook 시작 (Backend)"

# --------------- BE Static Analysis (Docker) -------------------------
divider
log "🛠 [Step 1] Java 정적분석 (Maven in Docker: Checkstyle/PMD)"

command -v docker >/dev/null 2>&1 || fail "Docker가 필요합니다."
docker compose version >/dev/null 2>&1 || fail "Docker Compose가 필요합니다."

COMPOSE_FILE="infra/docker-compose.yml"
[ -f "$COMPOSE_FILE" ] || fail "compose 파일을 찾을 수 없습니다. ($COMPOSE_FILE 경로 확인)"
docker compose -f "$COMPOSE_FILE" config >/dev/null || fail "compose 구성 오류"

# (수정됨) 루트 기준에서 pom.xml 확인
if [ -f "pom.xml" ]; then
  # (수정됨) 컨테이너 내부의 정확한 pom.xml 경로(-f)를 지정
  if ! docker compose -f "$COMPOSE_FILE" run --rm --remove-orphans -T code-quality \
        bash -lc 'mvn -f /workspace/pom.xml -q -DskipTests \
          -Dcheckstyle.skip=false -Dpmd.skip=false \
          clean verify'
  then
    error "Java 정적분석 실패 → 커밋 차단"
    echo "─── PMD 요약 ───"
    # (수정됨) 루트 기준에서 pmd-summary.sh 경로
    PMD_SUMMARY_LIMIT=100 ./scripts/pmd-summary.sh || true
    echo "📄 상세: target/site/pmd.html 또는 target/pmd.xml"
    exit 1
  fi
else
  warn "pom.xml을 찾지 못해 Java 정적분석을 건너뜁니다."
fi

divider
ok "🎉🎉🎉 [pre-commit] 모든 검사 통과 🎉🎉🎉"
divider